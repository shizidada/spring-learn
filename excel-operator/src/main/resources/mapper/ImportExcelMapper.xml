<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.excel.operator.mapper.ImportExcelMapper">
  <resultMap id="BaseResultMap" type="org.excel.operator.entity.ImportExcelDO">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="iccid" jdbcType="VARCHAR" property="iccid"/>
    <result column="operators" jdbcType="VARCHAR" property="operators"/>
    <result column="receiver" jdbcType="VARCHAR" property="receiver"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, iccid, operators, receiver, phone, address,create_time,update_time
  </sql>

  <insert id="addImportExcelRecord" parameterType="org.excel.operator.entity.ImportExcelDO">
    INSERT INTO t_excel_info(iccid, operators, receiver, phone, address, create_time, update_time)
    VALUES (#{iccid},#{operators},#{receiver},#{phone},#{address},#{createTime},#{updateTime})
  </insert>

  <insert id="addImportExcelRecordBatch">
    INSERT INTO t_excel_info(iccid, operators, receiver, phone, address, create_time, update_time)
    VALUES
    <foreach collection="excelDOList" item="info" separator=",">
      (#{info.iccid},#{info.operators},#{info.receiver},#{info.phone},#{info.address},#{info.createTime},#{info.updateTime})
    </foreach>
  </insert>

  <select id="selectAll" resultMap="BaseResultMap"
      parameterType="org.excel.operator.entity.ImportExcelDO">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_excel_info
    <where>
      <if test="iccid != null and iccid != ''">
        AND iccid = #{iccid,jdbcType=VARCHAR}
      </if>
      <if test="operators != null and operators != ''">
        AND operators = #{operators,jdbcType=VARCHAR}
      </if>
      <if test="receiver != null and receiver != ''">
        AND receiver = #{receiver,jdbcType=VARCHAR}
      </if>
      <if test="phone != null and phone != ''">
        AND phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="address != null and address != ''">
        AND address = #{address,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_excel_info
    WHERE id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByImportExcel" parameterType="org.excel.operator.entity.ImportExcelDO"
      resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_excel_info
    <where>
      <if test="iccid != null and iccid != ''">
        AND iccid = #{iccid,jdbcType=VARCHAR}
      </if>
      <if test="operators != null and operators != ''">
        AND operators = #{operators,jdbcType=VARCHAR}
      </if>
      <if test="receiver != null and receiver != ''">
        AND receiver = #{receiver,jdbcType=VARCHAR}
      </if>
      <if test="phone != null and phone != ''">
        AND phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="address != null and address != ''">
        AND address = #{address,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectSameReceiverAndPhoneAndAddress" resultMap="BaseResultMap">
    SELECT iccid, operators, receiver, phone, address,create_time,update_time FROM t_excel_info a
    WHERE
    (a.receiver,a.phone,a.address) IN (SELECT
    receiver,phone,address from t_excel_info GROUP BY receiver,phone,address HAVING COUNT(*) > 1)
    ORDER BY receiver
  </select>

  <select id="selectDiffReceiverAndPhoneAndAddress" resultMap="BaseResultMap">
    SELECT iccid, operators, receiver, phone, address,create_time,update_time FROM t_excel_info a
    where (a.receiver,a.phone,a.address) IN (SELECT
    receiver,phone,address from t_excel_info GROUP BY receiver,phone,address HAVING COUNT(*) &lt;=
    1) ORDER BY receiver
  </select>

</mapper>