<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.moose.operator.mapper.UserInfoMapper">

  <resultMap id="BaseResultMap" type="org.moose.operator.model.domain.UserInfoDO">
    <id column="user_id" jdbcType="VARCHAR" property="userId"/>
    <id column="username" jdbcType="VARCHAR" property="userName"/>
    <id column="account_id" jdbcType="VARCHAR" property="accountId"/>
    <id column="account_name" jdbcType="VARCHAR" property="accountName"/>
    <id column="phone" jdbcType="VARCHAR" property="phone"/>
    <id column="avatar" jdbcType="VARCHAR" property="avatar"/>
    <id column="email" jdbcType="VARCHAR" property="email"/>
    <id column="job" jdbcType="VARCHAR" property="job"/>
    <id column="address" jdbcType="VARCHAR" property="address"/>
    <id column="description" jdbcType="VARCHAR" property="description"/>
    <id column="gender" jdbcType="VARCHAR" property="gender"/>
  </resultMap>

  <sql id="Base_Column">
    user_id, username, phone, avatar, email, job, address, description, gender
  </sql>

  <insert id="insertUserInfo" parameterType="org.moose.operator.model.domain.UserInfoDO"
      useGeneratedKeys="true">
    INSERT INTO `t_user_info`(user_id, username, account_id, account_name,
    phone, avatar, email, job, address, description, gender)
    VALUES(#{userId}, #{userName},#{accountId}, #{accountName},
    #{phone}, #{avatar}, #{email}, #{job}, #{address}, #{description}, #{gender})
  </insert>

  <select id="findByAccountId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column"/>
    FROM `t_user_info` WHERE account_id=#{accountId}
  </select>

  <select id="findByUserId">
    SELECT
    <include refid="Base_Column"/>
    FROM `t_user_info` WHERE user_id=#{userId}
  </select>

  <update id="updateUserInfoByAccountId">
    UPDATE `t_user_info`
    <set>
      <if test="userInfo.userName != '' and userInfo.userName != null">
        username=#{userInfo.userName}, account_name=#{userInfo.userName},
      </if>
      <if test="userInfo.gender != '' and userInfo.gender != null">
        gender=#{userInfo.gender},
      </if>
      <if test="userInfo.avatar != '' and userInfo.avatar != null">
        avatar=#{userInfo.avatar},
      </if>
      email=#{userInfo.email},
      job=#{userInfo.job},
      address=#{userInfo.address},
      description=#{userInfo.description}
    </set>
    where account_id=#{accountId}
  </update>

  <update id="updatePhoneByAccountId">
    UPDATE `t_user_info` set phone=#{phone} where account_id=#{accountId}
  </update>

</mapper>