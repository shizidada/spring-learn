server:
  port: 8081 # 设置端口号
#  servlet:
#    context-path: /foo # 设置虚拟访问路径
# 配置服务器端口，默认是8080，可以不用配置

# 模板配置
# 这个开发配置为false，避免改了模板还要重启服务器

spring:

## thymeleaf settings
#  thymeleaf:
#    cache: false # 不适用缓存 默认为 true
#    enabled: false
#    prefix: classpath:/templates/ # 这个可以不配置，检查模板位置
#    check-template-location: true
#    # 下面3个，可以不配置
#    suffix: .html
#    encoding: utf-8
#    servlet:
#      content-type: text/html
#    mode: HTML5 # 2.0.2 HTML  1.5.2 HTML5

## file upload settings
#  servlet:
#    multipart:
#      max-file-size: 10kb # 上传文件大小 默认 1MB
#      max-request-size: 10kb #最大请求 默认 10MB
#      enabled: false #开启是否可以进行文件上传 默认 true


## freemarker settings
#  freemarker:
#    cache: false
#    suffix: .ftl
#    template-loader-path: classpath:/templates/

## JSP settings
#  mvc:
#    view:
#      prefix: /WEB-INF/
#      suffix: .jsp

#  devtools settings 默认为 true
#  devtools:
#    remote:
#      restart:
#        enabled: false

## 设置读取配置文件属性
#test:
#  message: "Hello SpringBoot!"

## 设置 sql 打印
# Springboot 默认情况下，记录ERROR级别，WARN级别和INFO级别日志
# 日志级别从低到高分为 TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为 WARN，则低于 WARN 的信息都不会输出。
# 可以通过使用--debug标志启动应用程序来启用“调试”模式。
# java -jar myapp.jar --debug 也可以通过配置文件设置 debug: true

#logging:
#  level:
#    org.learn.mapper: debug
#  path: logs
#  file: springboot.log

#upload:
#  path: D:/upload/

## security settings
#security:
#  basic:
#    enabled: true
#  user:
#    name: admin
#    password: admin
#    role:
#    - USER

## https settings
#  require-ssl: true # 告诉Spring Security 请求也需要透过HTTPS, 签名文件
#server:
#  port: 8443 # 指定 https 请求访问的端口
#  ssl:
#    key-store-type: PKCS12 # 指定密钥仓库类型
#    key-store: classpath:keystore.p12 # 指定密钥仓库路径
#    key-store-password: 123456 #指定签名密码
#    key-alias: tomcat # 别名

## 数据库配置
  datasource:
    name: moose
    url: jdbc:mysql://localhost:3306/moose?serverTimezone=GMT%2B8&useUnicode=true&&characterEncoding=UTF-8&&useSSL=false
    #    driver-class-name: com.mysql.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
      #获取连接等待超时时间
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      poolPreparedStatements: false
      maxPoolPreparedStatementPerConnectionSize: 20
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
      stat-view-servlet: #访问监控网页的登录用户名和密码
        login-username: druid
        login-password: druid
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties:
        druid:
          stat:
            mergeSql: true
            slowSqlMillis: 5000
#  redis:
#    host: 127.0.0.1
#    port: 6379
#    pool:
#      max-active: 20
#      max-idle: 8

# rabbitmq
#  rabbitmq:
#    port: 5672
#    host: 127.0.0.1
#    username: rabbit
#    password: 123456
#    virtual-host: /rabbit
#    publisher-confirms: true
#
